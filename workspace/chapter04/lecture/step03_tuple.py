
# 1.튜플
# 튜플 객체 특징
# 순처 자료구조를 갖는 열거형객체를 생성할 수 있다.
# 변수 = (값1, 값2 .... , 값n)
# 값의 자료형은 숫자형, 문자형, 논리형 등을 함께 사용할 수 있다.
# 색인(index)을 이용하여 자료 참조 가능, 슬라이싱, 연결, 반복, 요소 검사 등이 가능.
# !!읽기 전용이기 때문에!! 추가, 삽입, 수정, 삭제가 불가하다 <<
# 리스트보다 처리속도가 빠르다.

# 1-1.원소가 한 개인 경우
t=(10,)
print(t)  #(10,0)

# 1-2.원소가 여러 개인 경우
t2=(1,2,3,4,5,3)
print(t2)  #(1,2,3,4,5,3)

# 1-3.튜플 색인
print(t2[0],t2[1:4],t2[-1])  #1 (2,3,4) 3

# 1-4.수정 불가
#t2[0] =10 < error!

# 1-5.요소 반복
for i in t2:
    print(i,end=' ')  # 1 2 3 4 5 3

# 1-6.요소 검사
if 6 in t2:
    print('6 있음')
else:
    print('6 없음')

# 2.튜플 관련 함수
# 2-1.튜플 자료형 변환
lst=list(range(1,6))
t3=tuple(lst)
print(t3)  #(1,2,3,4,5)

# 2-2.튜플 관련 함수
print(len(t3),type(t3))  #5, <class 'tuple>
print(t3.count(3))  #1  n의 갯수를 세는 함수 count(n) / 3이 하나라서 1.
print(t3.index(3))  #2


